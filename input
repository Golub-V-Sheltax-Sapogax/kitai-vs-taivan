def fprint(field): 
    print('    0     1     2   ') 
    for i in range(N): 
        print(i, ' '.join(field[i])) 

def user1_input(): 
    user_cross = [] 
    while True: 
        user_cross = list(map(int, list(input("Ваш ход, великий партия Kитай, формат (строка колонка): ").split()))) 
        if len(user_cross) == 2 and all(list(map(lambda x: x in range(N), user_cross))): 
            row, col = user_cross[0], user_cross[1] 
            if empty_cell(row, col): 
                print("Ваш выбор, великий партия Kитай: ", user_cross) 
                return user_cross 
            else: 
                print("Ячейка уже занята, попробуй еще") 
        else: 
            print("Ваш ввод не распознан, попробуй еще")

def user2_input(): 
    user_cross = [] 
    while True: 
        user_cross = list(map(int, list(input("Ваш ход, глюпий партия Тайвань, формат (строка колонка): ").split()))) 
        if len(user_cross) == 2 and all(list(map(lambda x: x in range(N), user_cross))): 
            row, col = user_cross[0], user_cross[1] 
            if empty_cell(row, col): 
                print("Ваш выбор, глюпий партия Тайвань: ", user_cross) 
                return user_cross 
            else: 
                print("Ячейка уже занята, попробуй еще") 
        else: 
            print("Ваш ввод не распознан, попробуй еще")

def empty_cell(row, col): 
    cell = field[row][col] 
    if (cell == '(-_-)'): 
        return True 
    else: 
        return False 

def count_empty_cells(): 
    count = 0 
    for row in field: 
        for cell in row: 
            if cell == '(-_-)': 



def check_row(row, sym): 
    count = 0 
    for col in range(N): 
        val = field[row][col] 
        if (val == sym): 
            count += 1 

    return count == 3 


def check_col(col, sym): 
    count = 0 
    for row in range(N): 
        val = field[row][col] 
        if (val == sym): 
            count += 1 

    return count == 3 


def check_diag1(sym): 
    count = 0 
    for i in range(N): 
        val = field[i][i] 
        if (val == sym): 
            count += 1 

    return count == 3 


def check_diag2(sym): 
    count = 0 
    for i in range(N): 
        val = field[i][N - i - 1] 
        if (val == sym): 
            count += 1 

    return count == 3 


def check_win(sym): 
    check = [] 

    for i in range(N): 
        check.append(check_row(i, sym)) 
        check.append(check_col(i, sym)) 

    check.append(check_diag1(sym)) 
    check.append(check_diag2(sym)) 

    return any(check) 

                count += 1 
    return count 


